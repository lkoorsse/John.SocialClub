// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LoginSuccess - Use 'LoginSuccessParams' to pass parameters into this method.
        /// </summary>
        public void LoginSuccess()
        {
            #region Variable Declarations
            WinEdit uITxtUsernameEdit = this.UISocialclubLoginWindow.UITxtUsernameWindow.UITxtUsernameEdit;
            WinEdit uITxtPasswordEdit = this.UISocialclubLoginWindow.UITxtPasswordWindow.UITxtPasswordEdit;
            WinButton uILoginButton = this.UISocialclubLoginWindow.UILoginWindow.UILoginButton;
            #endregion

            // Type 'demo' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.LoginSuccessParams.UITxtUsernameEditText;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.LoginSuccessParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'txtPassword' text box
            Keyboard.SendKeys(uITxtPasswordEdit, this.LoginSuccessParams.UITxtPasswordEditSendKeys, true);

            // Type '{Enter}' in 'Login' button
            Keyboard.SendKeys(uILoginButton, this.LoginSuccessParams.UILoginButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// logged into social club registration page
        /// </summary>
        public void AssertRegistrationPage()
        {
            #region Variable Declarations
            WinButton uIRegisterButton = this.UISocialClubMembershipWindow.UIRegisterWindow.UIRegisterButton;
            #endregion

            // Verify that the 'Name' property of 'Register' button equals 'Register'
            Assert.AreEqual(this.AssertRegistrationPageExpectedValues.UIRegisterButtonName, uIRegisterButton.Name, "Login not success");
        }
        
        /// <summary>
        /// RegisterNew - Use 'RegisterNewParams' to pass parameters into this method.
        /// </summary>
        public void RegisterNew()
        {
            #region Variable Declarations
            WinEdit uITxtNameEdit = this.UISocialClubMembershipWindow.UITxtNameWindow.UITxtNameEdit;
            WinDateTimePicker uIDtDateOfBirthDateTimePicker = this.UISocialClubMembershipWindow.UIDtDateOfBirthWindow.UIDtDateOfBirthDateTimePicker;
            WinComboBox uICmbOccupationComboBox = this.UISocialClubMembershipWindow.UICmbOccupationWindow.UICmbOccupationComboBox;
            WinEdit uITxtSalaryEdit = this.UISocialClubMembershipWindow.UITxtSalaryWindow.UITxtSalaryEdit;
            WinComboBox uIOccupationComboBox = this.UISocialClubMembershipWindow.UICmbMaritalStatusWindow.UIOccupationComboBox;
            WinComboBox uIMaritalstatusComboBox = this.UISocialClubMembershipWindow.UICmbHealthStatusWindow.UIMaritalstatusComboBox;
            WinEdit uITxtNoOfChildrenEdit = this.UISocialClubMembershipWindow.UITxtNoOfChildrenWindow.UITxtNoOfChildrenEdit;
            WinButton uIRegisterButton = this.UISocialClubMembershipWindow.UIRegisterWindow.UIRegisterButton;
            #endregion

            // Type 'Bobby' in 'txtName' text box
            uITxtNameEdit.Text = this.RegisterNewParams.UITxtNameEditText;

            // Type '{Tab}' in 'txtName' text box
            Keyboard.SendKeys(uITxtNameEdit, this.RegisterNewParams.UITxtNameEditSendKeys, ModifierKeys.None);

            // Select '25/12/2000' in 'dtDateOfBirth' date time picker
            uIDtDateOfBirthDateTimePicker.DateTimeAsString = this.RegisterNewParams.UIDtDateOfBirthDateTimePickerDateTimeAsString;

            // Type '{Tab}' in 'dtDateOfBirth' date time picker
            Keyboard.SendKeys(uIDtDateOfBirthDateTimePicker, this.RegisterNewParams.UIDtDateOfBirthDateTimePickerSendKeys, ModifierKeys.None);

            // Select 'Doctor' in 'cmbOccupation' combo box
            uICmbOccupationComboBox.SelectedItem = this.RegisterNewParams.UICmbOccupationComboBoxSelectedItem;

            // Type '{Tab}' in 'cmbOccupation' combo box
            Keyboard.SendKeys(uICmbOccupationComboBox, this.RegisterNewParams.UICmbOccupationComboBoxSendKeys, ModifierKeys.None);

            // Type '3000' in 'txtSalary' text box
            uITxtSalaryEdit.Text = this.RegisterNewParams.UITxtSalaryEditText;

            // Type '{Tab}' in 'txtSalary' text box
            Keyboard.SendKeys(uITxtSalaryEdit, this.RegisterNewParams.UITxtSalaryEditSendKeys, ModifierKeys.None);

            // Select 'Married' in 'Occupation' combo box
            uIOccupationComboBox.SelectedItem = this.RegisterNewParams.UIOccupationComboBoxSelectedItem;

            // Type '{Tab}' in 'Occupation' combo box
            Keyboard.SendKeys(uIOccupationComboBox, this.RegisterNewParams.UIOccupationComboBoxSendKeys, ModifierKeys.None);

            // Select 'Excellent' in 'Marital status' combo box
            uIMaritalstatusComboBox.SelectedItem = this.RegisterNewParams.UIMaritalstatusComboBoxSelectedItem;

            // Type '{Tab}' in 'Marital status' combo box
            Keyboard.SendKeys(uIMaritalstatusComboBox, this.RegisterNewParams.UIMaritalstatusComboBoxSendKeys, ModifierKeys.None);

            // Type '3' in 'txtNoOfChildren' text box
            uITxtNoOfChildrenEdit.Text = this.RegisterNewParams.UITxtNoOfChildrenEditText;

            // Type '{Tab}' in 'txtNoOfChildren' text box
            Keyboard.SendKeys(uITxtNoOfChildrenEdit, this.RegisterNewParams.UITxtNoOfChildrenEditSendKeys, ModifierKeys.None);

            // Type '{Enter}' in 'Register' button
            Keyboard.SendKeys(uIRegisterButton, this.RegisterNewParams.UIRegisterButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// new member registered
        /// </summary>
        public void RegistrationSuccess()
        {
            #region Variable Declarations
            WinText uINewmemberregisteredsText = this.UIRegistrationSuccessfWindow.UINewmemberregisteredsWindow.UINewmemberregisteredsText;
            #endregion

            // Verify that the 'Name' property of 'New member registered successfully!' label equals 'New member registered successfully!'
            Assert.AreEqual(this.RegistrationSuccessExpectedValues.UINewmemberregisteredsTextName, uINewmemberregisteredsText.Name, "new registration unsuccessful");
        }
        
        #region Properties
        public virtual LoginSuccessParams LoginSuccessParams
        {
            get
            {
                if ((this.mLoginSuccessParams == null))
                {
                    this.mLoginSuccessParams = new LoginSuccessParams();
                }
                return this.mLoginSuccessParams;
            }
        }
        
        public virtual AssertRegistrationPageExpectedValues AssertRegistrationPageExpectedValues
        {
            get
            {
                if ((this.mAssertRegistrationPageExpectedValues == null))
                {
                    this.mAssertRegistrationPageExpectedValues = new AssertRegistrationPageExpectedValues();
                }
                return this.mAssertRegistrationPageExpectedValues;
            }
        }
        
        public virtual RegisterNewParams RegisterNewParams
        {
            get
            {
                if ((this.mRegisterNewParams == null))
                {
                    this.mRegisterNewParams = new RegisterNewParams();
                }
                return this.mRegisterNewParams;
            }
        }
        
        public virtual RegistrationSuccessExpectedValues RegistrationSuccessExpectedValues
        {
            get
            {
                if ((this.mRegistrationSuccessExpectedValues == null))
                {
                    this.mRegistrationSuccessExpectedValues = new RegistrationSuccessExpectedValues();
                }
                return this.mRegistrationSuccessExpectedValues;
            }
        }
        
        public UISocialclubLoginWindow UISocialclubLoginWindow
        {
            get
            {
                if ((this.mUISocialclubLoginWindow == null))
                {
                    this.mUISocialclubLoginWindow = new UISocialclubLoginWindow();
                }
                return this.mUISocialclubLoginWindow;
            }
        }
        
        public UISocialClubMembershipWindow UISocialClubMembershipWindow
        {
            get
            {
                if ((this.mUISocialClubMembershipWindow == null))
                {
                    this.mUISocialClubMembershipWindow = new UISocialClubMembershipWindow();
                }
                return this.mUISocialClubMembershipWindow;
            }
        }
        
        public UIRegistrationSuccessfWindow UIRegistrationSuccessfWindow
        {
            get
            {
                if ((this.mUIRegistrationSuccessfWindow == null))
                {
                    this.mUIRegistrationSuccessfWindow = new UIRegistrationSuccessfWindow();
                }
                return this.mUIRegistrationSuccessfWindow;
            }
        }
        #endregion
        
        #region Fields
        private LoginSuccessParams mLoginSuccessParams;
        
        private AssertRegistrationPageExpectedValues mAssertRegistrationPageExpectedValues;
        
        private RegisterNewParams mRegisterNewParams;
        
        private RegistrationSuccessExpectedValues mRegistrationSuccessExpectedValues;
        
        private UISocialclubLoginWindow mUISocialclubLoginWindow;
        
        private UISocialClubMembershipWindow mUISocialClubMembershipWindow;
        
        private UIRegistrationSuccessfWindow mUIRegistrationSuccessfWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoginSuccessParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'demo' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "demo";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditSendKeys = "Rev8oF0BpqEt/sIAjLJMpZ+ROx1bg8C+2+9NbaZh47I=";
        
        /// <summary>
        /// Type '{Enter}' in 'Login' button
        /// </summary>
        public string UILoginButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertRegistrationPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertRegistrationPageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Register' button equals 'Register'
        /// </summary>
        public string UIRegisterButtonName = "Register";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegisterNew'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RegisterNewParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Bobby' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditText = "Bobby";
        
        /// <summary>
        /// Type '{Tab}' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select '25/12/2000' in 'dtDateOfBirth' date time picker
        /// </summary>
        public string UIDtDateOfBirthDateTimePickerDateTimeAsString = "25-Dec-2000";
        
        /// <summary>
        /// Type '{Tab}' in 'dtDateOfBirth' date time picker
        /// </summary>
        public string UIDtDateOfBirthDateTimePickerSendKeys = "{Tab}";
        
        /// <summary>
        /// Select 'Doctor' in 'cmbOccupation' combo box
        /// </summary>
        public string UICmbOccupationComboBoxSelectedItem = "Doctor";
        
        /// <summary>
        /// Type '{Tab}' in 'cmbOccupation' combo box
        /// </summary>
        public string UICmbOccupationComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '3000' in 'txtSalary' text box
        /// </summary>
        public string UITxtSalaryEditText = "3000";
        
        /// <summary>
        /// Type '{Tab}' in 'txtSalary' text box
        /// </summary>
        public string UITxtSalaryEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select 'Married' in 'Occupation' combo box
        /// </summary>
        public string UIOccupationComboBoxSelectedItem = "Married";
        
        /// <summary>
        /// Type '{Tab}' in 'Occupation' combo box
        /// </summary>
        public string UIOccupationComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Select 'Excellent' in 'Marital status' combo box
        /// </summary>
        public string UIMaritalstatusComboBoxSelectedItem = "Excellent";
        
        /// <summary>
        /// Type '{Tab}' in 'Marital status' combo box
        /// </summary>
        public string UIMaritalstatusComboBoxSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '3' in 'txtNoOfChildren' text box
        /// </summary>
        public string UITxtNoOfChildrenEditText = "3";
        
        /// <summary>
        /// Type '{Tab}' in 'txtNoOfChildren' text box
        /// </summary>
        public string UITxtNoOfChildrenEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Enter}' in 'Register' button
        /// </summary>
        public string UIRegisterButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RegistrationSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RegistrationSuccessExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'New member registered successfully!' label equals 'New member registered successfully!'
        /// </summary>
        public string UINewmemberregisteredsTextName = "New member registered successfully!";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISocialclubLoginWindow : WinWindow
    {
        
        public UISocialclubLoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Social club - Login";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Social club - Login");
            #endregion
        }
        
        #region Properties
        public UITxtUsernameWindow UITxtUsernameWindow
        {
            get
            {
                if ((this.mUITxtUsernameWindow == null))
                {
                    this.mUITxtUsernameWindow = new UITxtUsernameWindow(this);
                }
                return this.mUITxtUsernameWindow;
            }
        }
        
        public UITxtPasswordWindow UITxtPasswordWindow
        {
            get
            {
                if ((this.mUITxtPasswordWindow == null))
                {
                    this.mUITxtPasswordWindow = new UITxtPasswordWindow(this);
                }
                return this.mUITxtPasswordWindow;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow(this);
                }
                return this.mUILoginWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtUsernameWindow mUITxtUsernameWindow;
        
        private UITxtPasswordWindow mUITxtPasswordWindow;
        
        private UILoginWindow mUILoginWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtUsernameWindow : WinWindow
    {
        
        public UITxtUsernameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtUsername";
            this.WindowTitles.Add("Social club - Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtUsernameEdit
        {
            get
            {
                if ((this.mUITxtUsernameEdit == null))
                {
                    this.mUITxtUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Username:";
                    this.mUITxtUsernameEdit.WindowTitles.Add("Social club - Login");
                    #endregion
                }
                return this.mUITxtUsernameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtUsernameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtPasswordWindow : WinWindow
    {
        
        public UITxtPasswordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPassword";
            this.WindowTitles.Add("Social club - Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPasswordEdit.WindowTitles.Add("Social club - Login");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnLogin";
            this.WindowTitles.Add("Social club - Login");
            #endregion
        }
        
        #region Properties
        public WinButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[WinButton.PropertyNames.Name] = "Login";
                    this.mUILoginButton.WindowTitles.Add("Social club - Login");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISocialClubMembershipWindow : WinWindow
    {
        
        public UISocialClubMembershipWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Social Club - Membership Manager";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public UIRegisterWindow UIRegisterWindow
        {
            get
            {
                if ((this.mUIRegisterWindow == null))
                {
                    this.mUIRegisterWindow = new UIRegisterWindow(this);
                }
                return this.mUIRegisterWindow;
            }
        }
        
        public UITxtNameWindow UITxtNameWindow
        {
            get
            {
                if ((this.mUITxtNameWindow == null))
                {
                    this.mUITxtNameWindow = new UITxtNameWindow(this);
                }
                return this.mUITxtNameWindow;
            }
        }
        
        public UIDtDateOfBirthWindow UIDtDateOfBirthWindow
        {
            get
            {
                if ((this.mUIDtDateOfBirthWindow == null))
                {
                    this.mUIDtDateOfBirthWindow = new UIDtDateOfBirthWindow(this);
                }
                return this.mUIDtDateOfBirthWindow;
            }
        }
        
        public UICmbOccupationWindow UICmbOccupationWindow
        {
            get
            {
                if ((this.mUICmbOccupationWindow == null))
                {
                    this.mUICmbOccupationWindow = new UICmbOccupationWindow(this);
                }
                return this.mUICmbOccupationWindow;
            }
        }
        
        public UITxtSalaryWindow UITxtSalaryWindow
        {
            get
            {
                if ((this.mUITxtSalaryWindow == null))
                {
                    this.mUITxtSalaryWindow = new UITxtSalaryWindow(this);
                }
                return this.mUITxtSalaryWindow;
            }
        }
        
        public UICmbMaritalStatusWindow UICmbMaritalStatusWindow
        {
            get
            {
                if ((this.mUICmbMaritalStatusWindow == null))
                {
                    this.mUICmbMaritalStatusWindow = new UICmbMaritalStatusWindow(this);
                }
                return this.mUICmbMaritalStatusWindow;
            }
        }
        
        public UICmbHealthStatusWindow UICmbHealthStatusWindow
        {
            get
            {
                if ((this.mUICmbHealthStatusWindow == null))
                {
                    this.mUICmbHealthStatusWindow = new UICmbHealthStatusWindow(this);
                }
                return this.mUICmbHealthStatusWindow;
            }
        }
        
        public UITxtNoOfChildrenWindow UITxtNoOfChildrenWindow
        {
            get
            {
                if ((this.mUITxtNoOfChildrenWindow == null))
                {
                    this.mUITxtNoOfChildrenWindow = new UITxtNoOfChildrenWindow(this);
                }
                return this.mUITxtNoOfChildrenWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRegisterWindow mUIRegisterWindow;
        
        private UITxtNameWindow mUITxtNameWindow;
        
        private UIDtDateOfBirthWindow mUIDtDateOfBirthWindow;
        
        private UICmbOccupationWindow mUICmbOccupationWindow;
        
        private UITxtSalaryWindow mUITxtSalaryWindow;
        
        private UICmbMaritalStatusWindow mUICmbMaritalStatusWindow;
        
        private UICmbHealthStatusWindow mUICmbHealthStatusWindow;
        
        private UITxtNoOfChildrenWindow mUITxtNoOfChildrenWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRegisterWindow : WinWindow
    {
        
        public UIRegisterWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnRegister";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinButton UIRegisterButton
        {
            get
            {
                if ((this.mUIRegisterButton == null))
                {
                    this.mUIRegisterButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIRegisterButton.SearchProperties[WinButton.PropertyNames.Name] = "Register";
                    this.mUIRegisterButton.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUIRegisterButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIRegisterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtNameWindow : WinWindow
    {
        
        public UITxtNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtName";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Date of birth";
                    this.mUITxtNameEdit.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtDateOfBirthWindow : WinWindow
    {
        
        public UIDtDateOfBirthWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtDateOfBirth";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinDateTimePicker UIDtDateOfBirthDateTimePicker
        {
            get
            {
                if ((this.mUIDtDateOfBirthDateTimePicker == null))
                {
                    this.mUIDtDateOfBirthDateTimePicker = new WinDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDtDateOfBirthDateTimePicker.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUIDtDateOfBirthDateTimePicker;
            }
        }
        #endregion
        
        #region Fields
        private WinDateTimePicker mUIDtDateOfBirthDateTimePicker;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICmbOccupationWindow : WinWindow
    {
        
        public UICmbOccupationWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbOccupation";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbOccupationComboBox
        {
            get
            {
                if ((this.mUICmbOccupationComboBox == null))
                {
                    this.mUICmbOccupationComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICmbOccupationComboBox.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUICmbOccupationComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbOccupationComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtSalaryWindow : WinWindow
    {
        
        public UITxtSalaryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSalary";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtSalaryEdit
        {
            get
            {
                if ((this.mUITxtSalaryEdit == null))
                {
                    this.mUITxtSalaryEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSalaryEdit.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUITxtSalaryEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtSalaryEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICmbMaritalStatusWindow : WinWindow
    {
        
        public UICmbMaritalStatusWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbMaritalStatus";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIOccupationComboBox
        {
            get
            {
                if ((this.mUIOccupationComboBox == null))
                {
                    this.mUIOccupationComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIOccupationComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Occupation";
                    this.mUIOccupationComboBox.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUIOccupationComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIOccupationComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICmbHealthStatusWindow : WinWindow
    {
        
        public UICmbHealthStatusWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbHealthStatus";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIMaritalstatusComboBox
        {
            get
            {
                if ((this.mUIMaritalstatusComboBox == null))
                {
                    this.mUIMaritalstatusComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIMaritalstatusComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Marital status";
                    this.mUIMaritalstatusComboBox.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUIMaritalstatusComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIMaritalstatusComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtNoOfChildrenWindow : WinWindow
    {
        
        public UITxtNoOfChildrenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNoOfChildren";
            this.WindowTitles.Add("Social Club - Membership Manager");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNoOfChildrenEdit
        {
            get
            {
                if ((this.mUITxtNoOfChildrenEdit == null))
                {
                    this.mUITxtNoOfChildrenEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNoOfChildrenEdit.WindowTitles.Add("Social Club - Membership Manager");
                    #endregion
                }
                return this.mUITxtNoOfChildrenEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNoOfChildrenEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRegistrationSuccessfWindow : WinWindow
    {
        
        public UIRegistrationSuccessfWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Registration Successful";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Registration Successful");
            #endregion
        }
        
        #region Properties
        public UINewmemberregisteredsWindow UINewmemberregisteredsWindow
        {
            get
            {
                if ((this.mUINewmemberregisteredsWindow == null))
                {
                    this.mUINewmemberregisteredsWindow = new UINewmemberregisteredsWindow(this);
                }
                return this.mUINewmemberregisteredsWindow;
            }
        }
        #endregion
        
        #region Fields
        private UINewmemberregisteredsWindow mUINewmemberregisteredsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewmemberregisteredsWindow : WinWindow
    {
        
        public UINewmemberregisteredsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Registration Successful");
            #endregion
        }
        
        #region Properties
        public WinText UINewmemberregisteredsText
        {
            get
            {
                if ((this.mUINewmemberregisteredsText == null))
                {
                    this.mUINewmemberregisteredsText = new WinText(this);
                    #region Search Criteria
                    this.mUINewmemberregisteredsText.SearchProperties[WinText.PropertyNames.Name] = "New member registered successfully!";
                    this.mUINewmemberregisteredsText.WindowTitles.Add("Registration Successful");
                    #endregion
                }
                return this.mUINewmemberregisteredsText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUINewmemberregisteredsText;
        #endregion
    }
}
